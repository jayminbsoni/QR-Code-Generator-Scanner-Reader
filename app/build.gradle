plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'io.gitlab.arturbosch.detekt'
    id 'org.owasp.dependencycheck'
}

android {
    namespace 'com.jbs.qrcodesgr'
    compileSdk appCompileSdk

    defaultConfig {
        applicationId "com.jbs.qrcodesgr"
        minSdk appMinSdk
        targetSdk appTargetSdk
        versionCode appVersionCode
        versionName appVersionName

        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //this will set apk name with version code and version name
        setProperty("archivesBaseName", "${rootProject.name}_v${versionCode}_${versionName}_d${getDate()}")
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES',
                         'META-INF/DEPENDENCIES.txt',
                         'META-INF/dependencies.txt',
                         'META-INF/LICENSE',
                         'META-INF/LICENSE.txt',
                         'META-INF/license.txt',
                         'META-INF/NOTICE',
                         'META-INF/NOTICE.txt',
                         'META-INF/notice.txt',
                         'META-INF/ASL2.0',
                         'META-INF/LGPL2.1',
                         'META-INF/AL2.0',
                         'META-INF/atomicfu.kotlin_module',
                         'META-INF/rxjava.properties',
                         'META-INF/*.kotlin_module',
            ]
        }
    }

    buildTypes {
        //Debug
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        //Release
        release {
            debuggable false
            shrinkResources true
            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    allprojects {
        //ignore deprecated method while compile and run project fast
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:deprecation"
            options.compilerArgs << "-Xlint:unchecked"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}

static def getDate() {
    new Date().format('dd-MM-yyyy')
}

detekt {
    // Version of Detekt that will be used. When unspecified the latest detekt version found will be used.
    // Override to stay on the same version.
    toolVersion = "1.22.0"

    // Define the detekt configuration(s) you want to use. Defaults to the default detekt configuration.
    config = files("config/detekt/detekt.yml")

    // Applies the config files on top of detekt's default config file. `false` by default.
    buildUponDefaultConfig = true
}

dependencies {
    //region #AndroidX
    implementation "androidx.core:core-ktx:$coreKtx"

    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$constraint"

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"

    implementation "androidx.activity:activity-ktx:$activityKtx"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtx"
    //endregion

    //region #Kotlin
    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine"
    //endregion

    //region #Google
    implementation "com.google.android.material:material:$material"

    //region #Hilt
    implementation "com.google.dagger:hilt-android:$hiltV"
    kapt "com.google.dagger:hilt-compiler:$hiltV"
    //endregion

    // MLKit Barcode Scanning
    implementation "com.google.android.gms:play-services-mlkit-barcode-scanning:$mlkitBarcodeScanning"
    //endregion

    //region #Test
    implementation "androidx.test:core-ktx:$testCore"

    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:1.1.3"

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    //endregion

    //region #External Libraries
    //Timber
    implementation "com.jakewharton.timber:timber:$timber"
    //endregion
}
